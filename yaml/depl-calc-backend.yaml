apiVersion: v1
kind: Namespace
metadata:
  name: {.backend-namespace}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calc-backend-app
  namespace: {.backend-namespace}
  labels:
    app: calc-backend-app
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: calc-backend-app
  template:
    metadata:
      labels:
        app: calc-backend-app
    spec:
      containers:
      - name: calc-backend-app
        image: ghcr.io/{.registry}/demos/js-calc-backend:{.tag}
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "100Mi"
            cpu: "20m"
          limits:
            memory: "400Mi"
            cpu: "200m"
        env: 
          - name: "PORT"
            value: "8080"
          - name: "RANDOM"
            value: "1"
          - name: "VERSION"
            value: "{.version}"
          - name: "BUGGY"
            value: "false"
          - name: "LAGGY"
            value: "false"
          - name: "AIC_STRING"
            valueFrom:
              secretKeyRef:
                name: appconfig
                key: applicationInsightsConnectionString
---
apiVersion: v1
kind: Service
metadata:
  name: http-backend
  namespace: {.backend-namespace}
  labels:
    app.kubernetes.io/name: calc-backend-service
    app.kubernetes.io/version: 1.0.0
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "ing-4-subnet"
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: calc-backend-app
  type: LoadBalancer